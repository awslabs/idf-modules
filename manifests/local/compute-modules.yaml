name: batch-compute
path: modules/compute/aws-batch
parameters:
  - name: vpc-id
    valueFrom:
      moduleMetadata:
        group: networking
        name: basic-networking
        key: VpcId
  - name: private-subnet-ids
    valueFrom:
      moduleMetadata:
        group: networking
        name: basic-networking
        key: PrivateSubnetIds
  - name: batch-compute
    value:
      batch_compute_config:
        - env_name: ng1
          compute_type: ON_DEMAND
          max_vcpus: 4800
          desired_vcpus: 0
          order: 1
          instance_types:
             - "m5.xlarge"
        - env_name: ng2
          max_vcpus: 4800
          desired_vcpus: 0
          compute_type: SPOT
          order: 1
          # instance_types: #if not set, the code defaults to "optimal"
          #   - "m5.large"
        - env_name: ng3
          max_vcpus: 4800
          desired_vcpus: 0
          compute_type: FARGATE
          order: 1
---
name: eks
path: modules/compute/eks/
dataFiles:
  - filePath: data/eks_dockerimage-replication/versions/1.29.yaml
  - filePath: data/eks_dockerimage-replication/versions/default.yaml
parameters:
  # Use the below parameter if you want to use replicated container images from account's specific ECR repo(s)
  # - name: replicated-ecr-images-metadata-s3-path
  #   valueFrom:
  #     moduleMetadata:
  #       group: replication
  #       name: replication
  #       key: s3_full_path
  - name: vpc-id
    valueFrom:
      moduleMetadata:
        group: networking
        name: basic-networking
        key: VpcId
  - name: controlplane-subnet-ids
    valueFrom:
      moduleMetadata:
        group: networking
        name: basic-networking
        key: PrivateSubnetIds
  - name: dataplane-subnet-ids
    valueFrom:
      moduleMetadata:
        group: networking
        name: basic-networking
        key: PrivateSubnetIds
  - name: eks-admin-role-name
    value: Admin
  - name: eks-poweruser-role-name
    value: PowerUser
  - name: eks-read-only-role-name
    value: ReadOnly
  - name: mountpoint-buckets
    value: 
      - "test-bucket1"
      - "test-bucket2"
  - name: eks-version
    # value: 1.29
    valueFrom:
      envVariable: GLOBAL_EKS_VERSION
  - name: eks-compute
    value:
      eks_nodegroup_config:
        - eks_ng_name: ng1 # EKS Managed NodeGroup
          eks_node_quantity: 2
          eks_node_max_quantity: 5
          eks_node_min_quantity: 1
          eks_node_disk_size: 20
          eks_node_instance_type: "m5.large"
          eks_node_labels:
            usage: "general"
        # - eks_ng_name: ng2 # EKS Self Managed NodeGroup - only option for LocalZones ATM
        #   eks_node_quantity: 1
        #   eks_node_max_quantity: 5
        #   eks_node_min_quantity: 1
        #   eks_node_disk_size: 20
        #   eks_node_instance_type: "m5.2xlarge"
        #   eks_self_managed: True
        # - eks_ng_name: ng-gpu # EKS Managed NodeGroup with GPU AMI
        #   eks_node_quantity: 1
        #   eks_node_max_quantity: 2
        #   eks_node_min_quantity: 0
        #   eks_node_disk_size: 100
        #   eks_node_instance_type: "g4dn.xlarge"
        #   eks_node_labels:
        #     usage: "gpu"
        #     nvidia.com/gpu.present: "true"
        #   use_gpu_ami: True
        #   eks_node_taints:
        #     - key: "nvidia.com/gpu"
        #       value: "true"
        #       effect: "NoSchedule"
        #       #operator: "Equal"
        #   install_nvidia_device_plugin: True
      eks_node_spot: False
      eks_api_endpoint_private: False # This makes the EKS Endpoint PUBLIC and Private by default
      # ips_to_whitelist_from_ssm: ${IPS_TO_WHITELIST_FROM_SSM} # It loads SSM Params from `.env` file
      # ips_to_whitelist_adhoc: ${IPS_TO_WHITELIST_ADHOC} # It loads list of CIDRs from `.env` file
      eks_secrets_envelope_encryption: True
  - name: eks-addons
    value:
      # Load balancing
      deploy_aws_lb_controller: True 
      deploy_nginx_controller:
        value: True
        nginx_additional_annotations:
          nginx.ingress.kubernetes.io/whitelist-source-range: "100.64.0.0/10,10.0.0.0/8"
      # DNS Component
      deploy_external_dns: True 
      # Storage drivers
      deploy_aws_ebs_csi: True 
      deploy_aws_efs_csi: True 
      deploy_aws_s3_csi: True
      # Autoscaling
      deploy_cluster_autoscaler: True 
      deploy_metrics_server: True 
      # # Secrets management
      deploy_secretsmanager_csi: True 
      deploy_external_secrets: False
      # Monitoring/Logging/Tracing
      deploy_cloudwatch_observability_addon: True
      deploy_adot: False
      deploy_cloudwatch_container_insights_metrics: False 
      deploy_cloudwatch_container_insights_logs: False
      cloudwatch_container_insights_logs_retention_days: 7
      deploy_amp: False
      deploy_grafana_for_amp: False
      # Reboot agent
      deploy_kured: True
      # Network level segmentation
      deploy_calico: True
      # Security policies
      deploy_kyverno:
        value: True
        kyverno_policies:
          validate:
            - block-ephemeral-containers
            - block-stale-images
            - block-updates-deletes
            - check-deprecated-apis
            - disallow-cri-sock-mount
            - disallow-custom-snippets
            - disallow-empty-ingress-host
            - disallow-helm-tiller
            - disallow-latest-tag
            - disallow-localhost-services
            - disallow-secrets-from-env-vars
            - ensure-probes-different
            - ingress-host-match-tls
            - limit-hostpath-vols
            - prevent-naked-pods
            - require-drop-cap-net-raw
            - require-emptydir-requests-limits
            - require-labels
            - require-pod-requests-limits
            - require-probes
            - restrict-annotations
            - restrict-automount-sa-token
            - restrict-binding-clusteradmin
            - restrict-clusterrole-nodesproxy
            - restrict-escalation-verbs-roles
            - restrict-ingress-classes
            - restrict-ingress-defaultbackend
            - restrict-node-selection
            - restrict-path
            - restrict-service-external-ips
            - restrict-wildcard-resources
            - restrict-wildcard-verbs
            - unique-ingress-host-and-path
          # mutate:
          #   - add-networkpolicy-dns
          #   - add-pod-priorityclassname
          #   - add-ttl-jobs
          #   - always-pull-images
          #   - mitigate-log4shell
---
name: emr-serverless
path: modules/compute/emr-serverless
parameters:
  - name: vpc-id
    valueFrom:
      moduleMetadata:
        group: networking
        name: basic-networking
        key: VpcId
  - name: private-subnet-ids
    valueFrom:
      moduleMetadata:
        group: networking
        name: basic-networking
        key: PrivateSubnetIds