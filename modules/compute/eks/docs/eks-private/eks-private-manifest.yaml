name: eks
path: modules/core/eks/
dataFiles:
  - filePath: data/eks_dockerimage-replication/versions/<<EKS_VERSION>>.yaml #replace the EKS_VERSION with the right EKS Cluster version
  - filePath: data/eks_dockerimage-replication/versions/default.yaml
parameters:
  - name: vpc-id
    valueFrom:
      moduleMetadata:
        group: optionals
        name: networking
        key: VpcId
  - name: controlplane-subnet-ids
    valueFrom:
      moduleMetadata:
        group: optionals
        name: networking
        key: PrivateSubnetIds
  - name: dataplane-subnet-ids
    valueFrom:
      moduleMetadata:
        group: optionals
        name: networking
        key: PrivateSubnetIds
  - name: eks-admin-role-name
    value: Admin
  - name: eks-poweruser-role-name
    value: PowerUser
  - name: eks-read-only-role-name
    value: ReadOnly
  - name: eks-version
    value: 1.29 # Replace the EKS_VERSION inline here or set an env var and load it from `.env` file using below format
    # valueFrom:
    #   envVariable: GLOBAL_EKS_VERSION
  - name: eks-compute
    value:
      eks_nodegroup_config:
        - eks_ng_name: ng1 # EKS Managed NodeGroup
          eks_node_quantity: 2
          eks_node_max_quantity: 5
          eks_node_min_quantity: 1
          eks_node_disk_size: 20
          eks_node_instance_type: "m5.large"
        - eks_ng_name: ng2 # EKS Self Managed NodeGroup
          eks_node_quantity: 1
          eks_node_max_quantity: 5
          eks_node_min_quantity: 1
          eks_node_disk_size: 20
          eks_node_instance_type: "m5.2xlarge"
          eks_self_managed: True
        - eks_ng_name: ng-gpu # EKS Managed NodeGroup with GPU AMI
          eks_node_quantity: 1
          eks_node_max_quantity: 2
          eks_node_min_quantity: 0
          eks_node_disk_size: 100
          eks_node_instance_type: "g4dn.xlarge"
          eks_node_labels:
            usage: "gpu"
            nvidia.com/gpu.present: "true"
          use_gpu_ami: True
          eks_node_taints:
            - key: "nvidia.com/gpu"
              value: "true"
              effect: "NoSchedule"
              #operator: "Equal"
          install_nvidia_device_plugin: True
      eks_node_spot: False
      eks_api_endpoint_private: False # This makes the EKS Endpoint PUBLIC by default
      eks_secrets_envelope_encryption: True 
  - name: eks-addons
    value:
      # Load balancing
      deploy_aws_lb_controller: True
      deploy_nginx_controller:
        value: False
        nginx_additional_annotations:
          nginx.ingress.kubernetes.io/whitelist-source-range: "100.64.0.0/10,10.0.0.0/8"
      # DNS
      deploy_external_dns: False 
      # Storage drivers
      deploy_aws_ebs_csi: False
      deploy_aws_efs_csi: False 
      deploy_aws_s3_csi: False
      deploy_aws_fsx_csi: False
      # Autoscaling
      deploy_cluster_autoscaler: True 
      deploy_metrics_server: True
      # Secrets
      deploy_secretsmanager_csi: False 
      deploy_external_secrets: False
      # Monitoring/Logging/Tracing
      deploy_cloudwatch_observability_addon: True
      deploy_cloudwatch_container_insights_metrics: True
      deploy_cloudwatch_container_insights_logs: True
      cloudwatch_container_insights_logs_retention_days: 7
      deploy_amp: False
      deploy_grafana_for_amp: False
      deploy_kured: False
      # Security, Identity, & Compliance
      deploy_calico: False
      deploy_kyverno:
        value: False
        kyverno_policies:
          validate:
            - block-ephemeral-containers
            - block-stale-images
            - block-updates-deletes
            - check-deprecated-apis
            - disallow-cri-sock-mount
            - disallow-custom-snippets
            - disallow-empty-ingress-host
            - disallow-helm-tiller
            - disallow-latest-tag
            - disallow-localhost-services
            - disallow-secrets-from-env-vars
            - ensure-probes-different
            - ingress-host-match-tls
            - limit-hostpath-vols
            - prevent-naked-pods
            - require-drop-cap-net-raw
            - require-emptydir-requests-limits
            - require-labels
            - require-pod-requests-limits
            - require-probes
            - restrict-annotations
            - restrict-automount-sa-token
            - restrict-binding-clusteradmin
            - restrict-clusterrole-nodesproxy
            - restrict-escalation-verbs-roles
            - restrict-ingress-classes
            - restrict-ingress-defaultbackend
            - restrict-node-selection
            - restrict-path
            - restrict-service-external-ips
            - restrict-wildcard-resources
            - restrict-wildcard-verbs
            - unique-ingress-host-and-path
          # mutate:
          #   - add-networkpolicy-dns
          #   - add-pod-priorityclassname
          #   - add-ttl-jobs
          #   - always-pull-images
          #   - mitigate-log4shell