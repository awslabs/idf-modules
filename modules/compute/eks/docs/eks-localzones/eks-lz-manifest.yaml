name: eks
path: modules/core/eks/
dataFiles:
  - filePath: data/eks_dockerimage-replication/versions/<<EKS_VERSION>>.yaml #replace the EKS_VERSION with the right EKS Cluster version
  - filePath: data/eks_dockerimage-replication/versions/default.yaml
parameters:
  - name: vpc-id
    valueFrom:
      moduleMetadata:
        group: optionals
        name: networking
        key: VpcId
  - name: controlplane-subnet-ids
    valueFrom:
      moduleMetadata:
        group: optionals
        name: networking
        key: PrivateSubnetIds
  - name: dataplane-subnet-ids
    valueFrom:
      moduleMetadata:
        group: optionals
        name: networking
        key: LocalZonePrivateSubnetIds
  - name: eks-admin-role-name
    value: Admin
  - name: eks-poweruser-role-name
    value: PowerUser
  - name: eks-read-only-role-name
    value: ReadOnly
  - name: eks-version
    value: 1.29 # Replace the EKS_VERSION inline here or set an env var and load it from `.env` file using below format
    # valueFrom:
    #   envVariable: GLOBAL_EKS_VERSION
  - name: eks-compute
    value:
      eks_nodegroup_config:
        - eks_ng_name: ng1 # EKS Self managed nodegroups are compatible with LocalZones currently
          eks_node_quantity: 1
          eks_node_max_quantity: 5
          eks_node_min_quantity: 1
          eks_node_disk_size: 20
          eks_node_instance_type: "m5.2xlarge"
          eks_self_managed: True
      eks_node_spot: False
      eks_api_endpoint_private: False # This makes the EKS Endpoint public
      eks_secrets_envelope_encryption: True 
  - name: eks-addons
    value:
      deploy_aws_lb_controller: True
      # Storage
      deploy_aws_ebs_csi: True 
      deploy_aws_s3_csi: True
      deploy_aws_fsx_csi: True
      # Autoscaling
      deploy_cluster_autoscaler: True 
      deploy_metrics_server: True 
      # Secrets
      deploy_secretsmanager_csi: True 
      # Monitoring/Logging/Tracing
      deploy_cloudwatch_observability_addon: True