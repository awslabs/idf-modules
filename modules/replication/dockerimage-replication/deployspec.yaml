publishGenericEnvVariables: true
deploy:
  phases:
    install:
      commands:
        - pip install -r requirements.txt
        - wget https://get.helm.sh/helm-v3.11.3-linux-amd64.tar.gz && tar zxf helm-v3.11.3-linux-amd64.tar.gz && mv linux-amd64/helm /usr/local/bin/helm
    build:
      commands:
        # dkr - docker; img - images; rep - replications; md - metadata
        - S3_BUCKET_NAME="${SEEDFARMER_PROJECT_NAME}-dkr-img-rep-md-${AWS_DEFAULT_REGION}-${AWS_ACCOUNT_ID}"
        - S3_OBJECT_NAME="${SEEDFARMER_DEPLOYMENT_NAME}-${SEEDFARMER_MODULE_NAME}-metadata.json"
        - |
          if ! aws s3api head-bucket --bucket "${S3_BUCKET_NAME}"; then
            if [ ${AWS_DEFAULT_REGION} == "us-east-1" ]; then
              aws s3api create-bucket --bucket "${S3_BUCKET_NAME}" --region "${AWS_DEFAULT_REGION}" 
            else
              aws s3api create-bucket --bucket "${S3_BUCKET_NAME}" --region "${AWS_DEFAULT_REGION}" --create-bucket-configuration LocationConstraint=${AWS_DEFAULT_REGION}
            fi
            sleep 15
          fi
        - python3 get-list-of-eks-images.py --eks-version ${SEEDFARMER_PARAMETER_EKS_VERSION} --versions-directory data/eks_dockerimage-replication/versions --update-helm-repos --registry-prefix "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${SEEDFARMER_PROJECT_NAME}-"        
        - chmod +x replication.sh
        - bash replication.sh create
        - aws s3 cp replication-result.json s3://${S3_BUCKET_NAME}/${S3_OBJECT_NAME}
        - >
          echo "s3_bucket: ${S3_BUCKET_NAME}" > s3_metadata.yaml
        - >
          echo "s3_object: ${S3_OBJECT_NAME}" >> s3_metadata.yaml
        - >
          echo "s3_full_path: ${S3_BUCKET_NAME}/${S3_OBJECT_NAME}" >> s3_metadata.yaml
        - cat s3_metadata.yaml
        - export SEEDFARMER_MODULE_METADATA=$(python -c "import yaml; import json; file=open('s3_metadata.yaml'); print(json.dumps(yaml.safe_load(file)))")

destroy:
  phases:
    build:
      commands:
        - chmod +x replication.sh
        # The below command removes the ECR repos with `idf` as prefix which has the replicated images. PLEASE USE IT AT YOUR OWN RISK
        - bash replication.sh destroy
build_type: BUILD_GENERAL1_LARGE
